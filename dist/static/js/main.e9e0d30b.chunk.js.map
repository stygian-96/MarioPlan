{"version":3,"sources":["components/layout/SignedIn.js","store/actions/authActions.js","components/layout/SignedOut.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","SignedIn","SignedOut","Notifications","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e9e0d30b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className = \"right\">\r\n            <li><NavLink to = \"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to = \"/\" className = \"btn btn-floating blue lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import { getFirebase } from \"react-redux-firebase\"\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        \r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className = \"right\">\r\n            <li><NavLink to = \"/signin\">Log In</NavLink></li>\r\n            <li><NavLink to = \"/signup\">Sign Up</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedIn';\r\nimport SignedOutLinks from './SignedOut';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props\r\n    const links = auth.uid ? <SignedInLinks profile = {profile}/> : <SignedOutLinks /> \r\n    return (\r\n        <nav className = \"nav-wrapper grey darken-3\">\r\n            <div className = \"container\">\r\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\n\r\nconst Notifications = () => {\r\n    return(\r\n        <div>\r\n            <p>Notifications</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n        <div className = \"card z-depth-0 project-summary\">\r\n            <div className = \"card-content grey-text text-darken-3\">\r\n                <span className = \"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className = \"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className = \"project-list section\">\r\n            {\r\n                projects && projects.map(project => {\r\n                    return (\r\n                        <Link to = {'/projects/'+project.id} key={project.id}>\r\n                            <ProjectSummary project={project} />\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        const {projects, auth} = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return(\r\n            <div className = \"dashboard container\">\r\n                <div className = \"row\">\r\n                    <div className = \"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className = \"col s12 m5 offest-m1\">\r\n                    <Notifications />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n            <div className = \"container section project-details\">\r\n                <div className = \"card z-depth-0\">\r\n                    <div className = \"card-content\">\r\n                        <span className=\"card-title\">{project.title} </span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className = \"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{ moment(project.createdAt.toDate()).calendar() }</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return(\r\n            <div className = \"container section project-details\">\r\n                <div className = \"card z-depth-0\">\r\n                    <div className = \"card-content\">\r\n                        <span className=\"card-title\"> Loading Projects </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const {authError, auth} = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className = \"container\">\r\n                <form onSubmit={this.handleSubmit} className = \"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange = {this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange = {this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1 z-depth-0\">LogIn</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>Login Failed</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className = \"container\">\r\n                <form onSubmit={this.handleSubmit} className = \"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange = {this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange = {this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange = {this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange = {this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1 z-depth-0\">LogIn</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className = \"container\">\r\n                <form onSubmit={this.handleSubmit} className = \"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange = {this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" onChange = {this.handleChange} className=\"materialize-textarea\"></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project: project})\r\n        }).catch((err) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport ProjectDetails from './components/projects/ProjectDetails';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateProject from './components/projects/CreateProject';\r\n\r\nclass App extends Component{\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className = \"App\">\r\n          <Navbar />\r\n        </div>\r\n        <Switch>\r\n          <Route exact path = \"/\" component={Dashboard}/>\r\n          <Route path = \"/projects/:id\" component = {ProjectDetails} />\r\n          <Route path = \"/signin\" component = {SignIn}/>\r\n          <Route path = \"/signup\" component = {SignUp} />\r\n          <Route path = \"/create\" component = {CreateProject} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState,action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log(\"Login failed\")\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log(\"Login success\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }    \r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log(\"Signout success\")\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log(\"Signup success\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log(\"Signup error\" + action.err.message)\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'Help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'Reinforcement learning', content: 'blah blah blah'},\r\n        {id: '3', title: 'Computer automation', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState,action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log(\"Created Project\", action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log(\"Create project error\", action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import * as firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/analytics'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDn26xJTcrKq66OamVFfk7ITz101HX8pIc\",\r\n    authDomain: \"mario-plan-360.firebaseapp.com\",\r\n    databaseURL: \"https://mario-plan-360.firebaseio.com\",\r\n    projectId: \"mario-plan-360\",\r\n    storageBucket: \"mario-plan-360.appspot.com\",\r\n    messagingSenderId: \"920024466176\",\r\n    appId: \"1:920024466176:web:a07a840df84b77b79869e5\",\r\n    measurementId: \"G-1WP2KR2BMW\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './store/reducer/rootReducer';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase, ReactReduxFirebaseProvider } from 'react-redux-firebase';\r\nimport fbConfig from './config/fbConfig';\r\nimport firebase from 'firebase/app'\r\nimport { useSelector  } from 'react-redux'\r\nimport { isLoaded  } from 'react-redux-firebase'\r\n\r\nconst store = createStore(rootReducer, \r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\r\n    reduxFirestore(fbConfig),\r\n  )\r\n);\r\n\r\nconst profileSpecificProps = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true,\r\n  enableRedirectHandling: false,\r\n  resetBeforeLogin: false\r\n}\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: fbConfig,\r\n  config: profileSpecificProps,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance,\r\n  userProfile: 'users', \r\n  presence: 'presence', \r\n  sessions: 'sessions'\r\n};\r\n\r\n\r\nfunction AuthIsLoaded({ children }) {\r\n  const auth = useSelector(state => state.firebase.auth)\r\n  if (!isLoaded(auth)) return <div></div>;\r\n  return children\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n        <AuthIsLoaded>\r\n          <App />\r\n        </AuthIsLoaded>\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}